Project test_schema {
  author: 'dbml.org'
  note: 'This schema is used for PyDBML doctest'
}

Enum "orders_status" {
  "created"
  "running"
  "done"
  "failure"
}

Enum "product status" {
  "Out of Stock"
  "In Stock"
}

Table "orders" [headercolor: #fff] {
  "id" int [pk, increment]
  "user_id" int [unique, not null]
  "status" orders_status
  "created_at" varchar
}

Table "order_items" {
  "order_id" int
  "product_id" int
  "quantity" int [default: 1]
}

Table "products" {
  "id" int [pk]
  "name" varchar
  "merchant_id" int [not null]
  "price" int
  "status" "product status"
  "created_at" datetime [default: `now()`]


Indexes {
  (merchant_id, status) [name: "product_status"]
  id [type: hash, unique]
}
}

Table "users" {
  "id" int [pk]
  "full_name" varchar
  "email" varchar [unique]
  "gender" varchar
  "date_of_birth" varchar
  "created_at" varchar
  "country_code" int
}

Ref:"orders"."id" < "order_items"."order_id"

TableGroup g1 {
  users
  merchants
}

TableGroup g2 {
  countries
  orders
}

Table "merchants" {
  "id" int [pk]
  "merchant_name" varchar
  "country_code" int
  "created_at" varchar
  "admin_id" int
}


Ref:"products"."id" < "order_items"."product_id" [update: set default, delete: set null]

Ref:"countries"."code" < "users"."country_code"

Ref:"countries"."code" < "merchants"."country_code"

Ref:"merchants"."id" < "products"."merchant_id"

Ref:"users"."id" < "merchants"."admin_id"

Table "countries" {
  "code" int [pk]
  "name" varchar
  "continent_name" varchar
}

Note sticky_note1 {
  'One line note'
}

Note sticky_note2 {
  '''
    # Title
    body
  '''
}
